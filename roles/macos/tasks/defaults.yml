---
# Tasks for applying macOS defaults

- name: Include macOS variables
  ansible.builtin.include_vars:
    file: main.yml

- name: Close System Preferences to prevent overrides
  ansible.builtin.command: osascript -e 'tell application "System Preferences" to quit'
  changed_when: false
  failed_when: false # Ignore if it's already closed

# ---------------------------------------------------------------------------- #
# General UI/UX                                                                #
# ---------------------------------------------------------------------------- #

- name: Set computer name (Sharing Preferences)
  become: true
  ansible.builtin.command: "{{ item }}"
  loop:
    - scutil --set ComputerName "{{ macos_computer_name }}"
    # - scutil --set HostName "{{ macos_hostname }}" # Often set via DHCP, be careful
    - scutil --set LocalHostName "{{ macos_localhostname }}"
    - defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "{{ macos_localhostname }}"
  changed_when: false # These commands don't reliably report change

- name: Disable the sound effects on boot
  become: true
  ansible.builtin.command: nvram SystemAudioVolume=" "
  changed_when: false

- name: Disable transparency in the menu bar and elsewhere
  ansible.builtin.osx_defaults:
    domain: com.apple.universalaccess
    key: reduceTransparency
    type: bool
    value: true

- name: Set highlight color
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: AppleHighlightColor
    type: string
    value: "{{ macos_highlight_color }}"

- name: Set sidebar icon size to medium
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSTableViewDefaultSizeMode
    type: int
    value: 2

- name: Always show scrollbars
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: AppleShowScrollBars
    type: string
    value: "Always"

- name: Disable the over-the-top focus ring animation
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSUseAnimatedFocusRing
    type: bool
    value: false

# - name: Disable smooth scrolling (Uncomment if needed)
#   ansible.builtin.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSScrollAnimationEnabled
#     type: bool
#     value: false

- name: Increase window resize speed for Cocoa applications
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSWindowResizeTime
    type: float
    value: 0.001

- name: Expand save panel by default
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - NSNavPanelExpandedStateForSaveMode
    - NSNavPanelExpandedStateForSaveMode2

- name: Expand print panel by default
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - PMPrintingExpandedStateForPrint
    - PMPrintingExpandedStateForPrint2

- name: Save to disk (not to iCloud) by default
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSDocumentSaveNewDocumentsToCloud
    type: bool
    value: false

- name: Automatically quit printer app once the print jobs complete
  ansible.builtin.osx_defaults:
    domain: com.apple.print.PrintingPrefs
    key: "Quit When Finished"
    type: bool
    value: true

- name: Disable the "Are you sure you want to open this application?" dialog
  ansible.builtin.osx_defaults:
    domain: com.apple.LaunchServices
    key: LSQuarantine
    type: bool
    value: false

- name: Remove duplicates in the "Open With" menu
  ansible.builtin.command: /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
  changed_when: false

- name: Display ASCII control characters using caret notation
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSTextShowsControlCharacters
    type: bool
    value: true

- name: Disable Resume system-wide
  ansible.builtin.osx_defaults:
    domain: com.apple.systempreferences
    key: NSQuitAlwaysKeepsWindows
    type: bool
    value: false

- name: Disable automatic termination of inactive apps
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSDisableAutomaticTermination
    type: bool
    value: true

# - name: Disable the crash reporter
#   ansible.builtin.osx_defaults:
#     domain: com.apple.CrashReporter
#     key: DialogType
#     type: string
#     value: "none"

- name: Set Help Viewer windows to non-floating mode
  ansible.builtin.osx_defaults:
    domain: com.apple.helpviewer
    key: DevMode
    type: bool
    value: true

# Ancient UTF-8 bug fix commented out as in original script
# - name: Fix ancient UTF-8 QuickLook bug (potential Adobe issues)
#   ansible.builtin.copy:
#     content: "0x08000100:0"
#     dest: "~/.CFUserTextEncoding"
#     force: true

- name: Reveal IP address, hostname, OS version, etc. on login window clock click
  become: true
  ansible.builtin.osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: AdminHostInfo
    type: string
    value: HostName

- name: Disable Notification Center and remove the menu bar icon
  ansible.builtin.command: launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist
  changed_when: false
  failed_when: false # Ignore errors if already unloaded
  notify: Restart SystemUIServer

- name: Disable automatic capitalization
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticCapitalizationEnabled
    type: bool
    value: false

- name: Disable smart dashes
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticDashSubstitutionEnabled
    type: bool
    value: false

- name: Disable automatic period substitution
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticPeriodSubstitutionEnabled
    type: bool
    value: false

- name: Disable smart quotes
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticQuoteSubstitutionEnabled
    type: bool
    value: false

- name: Disable auto-correct
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: NSAutomaticSpellingCorrectionEnabled
    type: bool
    value: false

# Wallpaper setting is complex and user-specific, skipping for now.
# Requires placing image and potentially handling symlinks.

# ---------------------------------------------------------------------------- #
# Trackpad, mouse, keyboard, Bluetooth accessories, and input                  #
# ---------------------------------------------------------------------------- #

- name: Trackpad - enable tap to click for this user and for the login screen
  ansible.builtin.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    host: "{{ item.host | default(omit) }}"
  loop:
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: Clicking, type: bool, value: true }
    - { domain: NSGlobalDomain, key: com.apple.mouse.tapBehavior, type: int, value: 1, host: currentHost }
    - { domain: NSGlobalDomain, key: com.apple.mouse.tapBehavior, type: int, value: 1 }

- name: Trackpad - map bottom right corner to right-click
  ansible.builtin.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    host: "{{ item.host | default(omit) }}"
  loop:
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadCornerSecondaryClick, type: int, value: 2 }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadRightClick, type: bool, value: true }
    - { domain: NSGlobalDomain, key: com.apple.trackpad.trackpadCornerClickBehavior, type: int, value: 1, host: currentHost }
    - { domain: NSGlobalDomain, key: com.apple.trackpad.enableSecondaryClick, type: bool, value: true, host: currentHost }

- name: Disable "natural" scrolling
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: com.apple.swipescrolldirection
    type: bool
    value: false

- name: Increase sound quality for Bluetooth headphones/headsets
  ansible.builtin.osx_defaults:
    domain: com.apple.BluetoothAudioAgent
    key: "Apple Bitpool Min (editable)"
    type: int
    value: 40

- name: Enable full keyboard access for all controls (Tab in modal dialogs)
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: AppleKeyboardUIMode
    type: int
    value: 3

- name: Use scroll gesture with the Ctrl (^) modifier key to zoom
  ansible.builtin.osx_defaults:
    domain: com.apple.universalaccess
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
  loop:
    - { key: closeViewScrollWheelToggle, type: bool, value: true }
    - { key: HIDScrollZoomModifierMask, type: int, value: 262144 }

- name: Follow the keyboard focus while zoomed in
  ansible.builtin.osx_defaults:
    domain: com.apple.universalaccess
    key: closeViewZoomFollowsFocus
    type: bool
    value: true

- name: Disable press-and-hold for keys in favor of key repeat
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: ApplePressAndHoldEnabled
    type: bool
    value: false

- name: Set a fast keyboard repeat rate
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: "{{ item.key }}"
    type: int
    value: "{{ item.value }}"
  loop:
    - { key: KeyRepeat, value: 1 }
    - { key: InitialKeyRepeat, value: 10 }

- name: Set language and text formats
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
  loop:
    - { key: AppleLanguages, type: array, value: ["{{ macos_language }}"] } # Add more languages if needed: e.g., ["en", "nl"]
    - { key: AppleLocale, type: string, value: "{{ macos_locale }}" }
    - { key: AppleMeasurementUnits, type: string, value: "{{ macos_measurement_units }}" }
    - { key: AppleMetricUnits, type: bool, value: "{{ macos_metric_units }}" }

- name: Show language menu in the top right corner of the boot screen
  become: true
  ansible.builtin.osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: showInputMenu
    type: bool
    value: true

- name: Set the timezone
  become: true
  ansible.builtin.command: "systemsetup -settimezone \"{{ macos_timezone }}\""
  changed_when: false # systemsetup doesn't indicate change well

# - name: Stop iTunes from responding to the keyboard media keys (may affect Music app)
#   ansible.builtin.command: launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist
#   changed_when: false
#   failed_when: false

# ---------------------------------------------------------------------------- #
# Energy saving                                                                #
# ---------------------------------------------------------------------------- #

- name: Configure power management settings (pmset)
  become: true
  ansible.builtin.command: "pmset -{{ item.scope }} {{ item.setting }} {{ item.value }}"
  loop:
    - { scope: a, setting: lidwake, value: 1 }         # Enable lid wakeup
    - { scope: a, setting: autorestart, value: 1 }      # Restart automatically on power loss
    - { scope: a, setting: displaysleep, value: 15 }    # Sleep the display after 15 minutes
    - { scope: c, setting: sleep, value: 0 }            # Disable machine sleep while charging
    - { scope: b, setting: sleep, value: 5 }            # Set machine sleep to 5 minutes on battery
    - { scope: a, setting: standbydelay, value: 86400 } # Set standby delay to 24 hours
    - { scope: a, setting: hibernatemode, value: 0 }    # Disable hibernation (speeds up sleep)
  changed_when: false # pmset doesn't indicate change

- name: Restart automatically if the computer freezes
  become: true
  ansible.builtin.command: systemsetup -setrestartfreeze on
  changed_when: false

- name: Never go into computer sleep mode (redundant with pmset -c sleep 0?)
  become: true
  ansible.builtin.command: systemsetup -setcomputersleep Off
  changed_when: false

- name: Ensure sleepimage file exists (needed for hibernatemode 0)
  become: true
  ansible.builtin.file:
    path: /private/var/vm/sleepimage
    state: file # Changed from touch to ensure it's a file, size doesn't matter for mode 0
    mode: '0600'

- name: Make sleepimage immutable
  become: true
  ansible.builtin.command: chflags uchg /private/var/vm/sleepimage
  # This command will fail if the flag is already set, which is fine.
  failed_when: false
  changed_when: false # chflags doesn't report change

# ---------------------------------------------------------------------------- #
# Screen                                                                       #
# ---------------------------------------------------------------------------- #

- name: Require password immediately after sleep or screen saver begins
  ansible.builtin.osx_defaults:
    domain: com.apple.screensaver
    key: "{{ item.key }}"
    type: int
    value: "{{ item.value }}"
  loop:
    - { key: askForPassword, value: 1 }
    - { key: askForPasswordDelay, value: 0 }

- name: Save screenshots location
  ansible.builtin.osx_defaults:
    domain: com.apple.screencapture
    key: location
    type: string
    value: "{{ macos_screenshots_location }}"
  notify: Restart SystemUIServer

- name: Save screenshots format
  ansible.builtin.osx_defaults:
    domain: com.apple.screencapture
    key: type
    type: string
    value: "{{ macos_screenshots_format }}"

- name: Disable shadow in screenshots
  ansible.builtin.osx_defaults:
    domain: com.apple.screencapture
    key: disable-shadow
    type: bool
    value: true

- name: Enable subpixel font rendering on non-Apple LCDs
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: AppleFontSmoothing
    type: int
    value: 1 # 1=light, 2=medium, 3=strong

- name: Enable HiDPI display modes (requires restart)
  become: true
  ansible.builtin.osx_defaults:
    domain: /Library/Preferences/com.apple.windowserver
    key: DisplayResolutionEnabled
    type: bool
    value: true
  notify: Restart WindowServer # Note: Often needs full restart

# ---------------------------------------------------------------------------- #
# Finder                                                                       #
# ---------------------------------------------------------------------------- #

- name: Finder - allow quitting via ⌘ + Q
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: QuitMenuItem
    type: bool
    value: true
  notify: Restart Finder

- name: Finder - disable window animations and Get Info animations
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: DisableAllAnimations
    type: bool
    value: true
  notify: Restart Finder

- name: Set default location for new Finder windows
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: "{{ item.key }}"
    type: string
    value: "{{ item.value }}"
  loop:
    - { key: NewWindowTarget, value: "{{ macos_finder_new_window_target }}" }
    - { key: NewWindowTargetPath, value: "{{ macos_finder_new_window_target_path }}" }
  notify: Restart Finder

- name: Show icons for hard drives, servers, and removable media on the desktop
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: "{{ item.key }}"
    type: bool
    value: true
  loop:
    - ShowExternalHardDrivesOnDesktop
    - ShowHardDrivesOnDesktop
    - ShowMountedServersOnDesktop
    - ShowRemovableMediaOnDesktop
  notify: Restart Finder

# - name: Finder - show hidden files by default
#   ansible.builtin.osx_defaults:
#     domain: com.apple.finder
#     key: AppleShowAllFiles
#     type: bool
#     value: true
#   notify: Restart Finder

- name: Finder - show all filename extensions
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: AppleShowAllExtensions
    type: bool
    value: true
  notify: Restart Finder

- name: Finder - show status bar
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: ShowStatusBar
    type: bool
    value: true
  notify: Restart Finder

- name: Finder - show path bar
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: ShowPathbar
    type: bool
    value: true
  notify: Restart Finder

- name: Display full POSIX path as Finder window title
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: _FXShowPosixPathInTitle
    type: bool
    value: true
  notify: Restart Finder

- name: Keep folders on top when sorting by name
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: _FXSortFoldersFirst
    type: bool
    value: true
  notify: Restart Finder

- name: When performing a search, search the current folder by default
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: FXDefaultSearchScope
    type: string
    value: "SCcf"
  notify: Restart Finder

- name: Disable the warning when changing a file extension
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: FXEnableExtensionChangeWarning
    type: bool
    value: false
  notify: Restart Finder

- name: Enable spring loading for directories
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: com.apple.springing.enabled
    type: bool
    value: true

- name: Remove the spring loading delay for directories
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: com.apple.springing.delay
    type: float
    value: 0

- name: Avoid creating .DS_Store files on network or USB volumes
  ansible.builtin.osx_defaults:
    domain: com.apple.desktopservices
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - DSDontWriteNetworkStores
    - DSDontWriteUSBStores
  notify: Restart Finder

- name: Disable disk image verification
  ansible.builtin.osx_defaults:
    domain: com.apple.frameworks.diskimages
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - skip-verify
    - skip-verify-locked
    - skip-verify-remote

- name: Automatically open a new Finder window when a volume is mounted
  ansible.builtin.osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: bool
    value: true
  loop:
    - { domain: com.apple.frameworks.diskimages, key: auto-open-ro-root }
    - { domain: com.apple.frameworks.diskimages, key: auto-open-rw-root }
    - { domain: com.apple.finder, key: OpenWindowForNewRemovableDisk }
  notify: Restart Finder

# PlistBuddy commands are harder to make idempotent and manage with osx_defaults
# Using command module for now, but consider manual plist editing or other modules if needed.
- name: Finder - Set icon view settings using PlistBuddy
  ansible.builtin.command: "/usr/libexec/PlistBuddy -c 'Set :{{ item.path }} {{ item.value }}' ~/Library/Preferences/com.apple.finder.plist"
  loop:
    # Show item info near icons on the desktop and in other icon views
    - { path: 'DesktopViewSettings:IconViewSettings:showItemInfo', value: 'true' }
    - { path: 'FK_StandardViewSettings:IconViewSettings:showItemInfo', value: 'true' }
    - { path: 'StandardViewSettings:IconViewSettings:showItemInfo', value: 'true' }
    # Show item info to the right of the icons on the desktop
    - { path: 'DesktopViewSettings:IconViewSettings:labelOnBottom', value: 'false' }
    # Enable snap-to-grid for icons on the desktop and in other icon views
    - { path: 'DesktopViewSettings:IconViewSettings:arrangeBy', value: 'grid' }
    - { path: 'FK_StandardViewSettings:IconViewSettings:arrangeBy', value: 'grid' }
    - { path: 'StandardViewSettings:IconViewSettings:arrangeBy', value: 'grid' }
    # Increase grid spacing for icons on the desktop and in other icon views
    - { path: 'DesktopViewSettings:IconViewSettings:gridSpacing', value: '100' }
    - { path: 'FK_StandardViewSettings:IconViewSettings:gridSpacing', value: '100' }
    - { path: 'StandardViewSettings:IconViewSettings:gridSpacing', value: '100' }
    # Increase the size of icons on the desktop and in other icon views
    - { path: 'DesktopViewSettings:IconViewSettings:iconSize', value: '80' }
    - { path: 'FK_StandardViewSettings:IconViewSettings:iconSize', value: '80' }
    - { path: 'StandardViewSettings:IconViewSettings:iconSize', value: '80' }
  changed_when: false # PlistBuddy doesn't report changes reliably
  notify: Restart Finder

- name: Use list view in all Finder windows by default
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: FXPreferredViewStyle
    type: string
    value: "Nlsv"
  notify: Restart Finder

- name: Disable the warning before emptying the Trash
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: WarnOnEmptyTrash
    type: bool
    value: false
  notify: Restart Finder

- name: Enable AirDrop over Ethernet and on unsupported Macs
  ansible.builtin.osx_defaults:
    domain: com.apple.NetworkBrowser
    key: BrowseAllInterfaces
    type: bool
    value: true
  notify: Restart Finder

- name: Show the ~/Library folder
  ansible.builtin.command: chflags nohidden ~/Library
  changed_when: false # chflags doesn't indicate change

- name: Show the /Volumes folder
  become: true
  ansible.builtin.command: chflags nohidden /Volumes
  changed_when: false # chflags doesn't indicate change

# Skipping Dropbox icon removal as it requires file path guessing
# - name: Remove Dropbox green checkmark icons in Finder (if Dropbox installed)
#   ansible.builtin.command: mv -f /Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns /Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns.bak
#   args:
#     warn: false
#   register: dropbox_icon_move
#   failed_when: >
#     dropbox_icon_move.rc != 0 and
#     'No such file or directory' not in dropbox_icon_move.stderr
#   changed_when: dropbox_icon_move.rc == 0
#   notify: Restart Finder

- name: Expand the "General", "Open with", and "Sharing & Permissions" File Info panes
  ansible.builtin.osx_defaults:
    domain: com.apple.finder
    key: FXInfoPanesExpanded
    type: dict
    value:
      General: true
      OpenWith: true
      Privileges: true
  notify: Restart Finder

# ---------------------------------------------------------------------------- #
# Dock, Dashboard, and hot corners                                             #
# ---------------------------------------------------------------------------- #

- name: Enable highlight hover effect for the grid view of a stack (Dock)
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: mouse-over-hilite-stack
    type: bool
    value: true

- name: Set the icon size of Dock items to 36 pixels
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: tilesize
    type: int
    value: 36

- name: Change minimize/maximize window effect to scale
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: mineffect
    type: string
    value: "scale"

- name: Minimize windows into their application's icon
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: minimize-to-application
    type: bool
    value: true

- name: Enable spring loading for all Dock items
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: enable-spring-load-actions-on-all-items
    type: bool
    value: true

- name: Show indicator lights for open applications in the Dock
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: show-process-indicators
    type: bool
    value: true

# Wiping dock icons is destructive, skipping. Manage Dock via configuration profiles or other tools if needed.
# - name: Wipe all (default) app icons from the Dock
#   ansible.builtin.osx_defaults:
#     domain: com.apple.dock
#     key: persistent-apps
#     type: array
#     value: []

# - name: Show only open applications in the Dock
#   ansible.builtin.osx_defaults:
#     domain: com.apple.dock
#     key: static-only
#     type: bool
#     value: true

- name: Don't animate opening applications from the Dock
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: launchanim
    type: bool
    value: false

- name: Speed up Mission Control animations
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: expose-animation-duration
    type: float
    value: 0.1

- name: Don't group windows by application in Mission Control
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: expose-group-by-app
    type: bool
    value: false

- name: Disable Dashboard
  ansible.builtin.osx_defaults:
    domain: com.apple.dashboard
    key: mcx-disabled
    type: bool
    value: true

- name: Don't show Dashboard as a Space
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: dashboard-in-overlay
    type: bool
    value: true
  notify: Restart Dock # Requires Dock restart

- name: Don't automatically rearrange Spaces based on most recent use
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: mru-spaces
    type: bool
    value: false
  notify: Restart Dock # Requires Dock restart

- name: Remove the auto-hiding Dock delay
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: autohide-delay
    type: float
    value: 0

- name: Remove the animation when hiding/showing the Dock
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: autohide-time-modifier
    type: float
    value: 0

- name: Automatically hide and show the Dock
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: autohide
    type: bool
    value: true

- name: Make Dock icons of hidden applications translucent
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: showhidden
    type: bool
    value: true

- name: Don't show recent applications in Dock
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: show-recents
    type: bool
    value: false
  notify: Restart Dock

# Disable launchpad gesture commented out
# - name: Disable the Launchpad gesture (pinch with thumb and three fingers)
#   ansible.builtin.osx_defaults:
#     domain: com.apple.dock
#     key: showLaunchpadGestureEnabled
#     type: int
#     value: 0

- name: Reset Launchpad (removes user layout)
  ansible.builtin.command: find "{{ ansible_user_dir }}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
  changed_when: false # Hard to tell if files were deleted
  notify: Restart Dock

# Adding Simulators depends on Xcode being installed and in a standard location.
# Consider adding checks or making paths variable.
- name: Add iOS & Watch Simulator to Launchpad (Requires Xcode)
  become: true
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: true # Overwrite existing links if necessary
  loop:
    - src: /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
      dest: /Applications/Simulator.app
    - src: /Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app
      dest: "/Applications/Simulator (Watch).app"
  ignore_errors: true # Ignore if Xcode or paths don't exist

# Adding Dock spacers is possible but complex to manage idempotently via osx_defaults array manipulation.
# Skipping for now. Use `dockutil` or manual setup if needed.
# - name: Add a spacer to the left side of the Dock (applications)
#   ansible.builtin.osx_defaults:
#     domain: com.apple.dock
#     key: persistent-apps
#     type: array-add
#     value: {tile-data={}, tile-type="spacer-tile"}
# - name: Add a spacer to the right side of the Dock (others)
#   ansible.builtin.osx_defaults:
#     domain: com.apple.dock
#     key: persistent-others
#     type: array-add
#     value: {tile-data={}, tile-type="spacer-tile"}

- name: Configure Hot corners
  ansible.builtin.osx_defaults:
    domain: com.apple.dock
    key: "{{ item.key }}"
    type: int
    value: "{{ item.value }}"
  loop:
    - { key: wvous-tl-corner, value: "{{ macos_hotcorner_tl_corner }}" }
    - { key: wvous-tl-modifier, value: "{{ macos_hotcorner_tl_modifier }}" }
    - { key: wvous-tr-corner, value: "{{ macos_hotcorner_tr_corner }}" }
    - { key: wvous-tr-modifier, value: "{{ macos_hotcorner_tr_modifier }}" }
    - { key: wvous-bl-corner, value: "{{ macos_hotcorner_bl_corner }}" }
    - { key: wvous-bl-modifier, value: "{{ macos_hotcorner_bl_modifier }}" }
    - { key: wvous-br-corner, value: "{{ macos_hotcorner_br_corner }}" }
    - { key: wvous-br-modifier, value: "{{ macos_hotcorner_br_modifier }}" }
  notify: Restart Dock

# ---------------------------------------------------------------------------- #
# Safari & WebKit                                                              #
# ---------------------------------------------------------------------------- #

- name: Safari - Privacy - don't send search queries to Apple
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: false # Note: Original script sets UniversalSearchEnabled to false, SuppressSearchSuggestions to true. Setting both false for consistency.
  loop:
    - UniversalSearchEnabled
    - SuppressSearchSuggestions

- name: Safari - Press Tab to highlight each item on a web page
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - WebKitTabToLinksPreferenceKey
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks

- name: Safari - Show the full URL in the address bar
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: ShowFullURLInSmartSearchField
    type: bool
    value: true

- name: Safari - Set home page to about:blank
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: HomePage
    type: string
    value: "about:blank"

- name: Safari - Prevent opening 'safe' files automatically after downloading
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: AutoOpenSafeDownloads
    type: bool
    value: false

- name: Safari - Allow hitting the Backspace key to go to the previous page
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled
    type: bool
    value: true

- name: Safari - Hide bookmarks bar by default
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: ShowFavoritesBar
    type: bool
    value: false

- name: Safari - Hide sidebar in Top Sites
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: ShowSidebarInTopSites
    type: bool
    value: false

- name: Safari - Disable thumbnail cache for History and Top Sites
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: DebugSnapshotsUpdatePolicy
    type: int
    value: 2

- name: Safari - Enable debug menu
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: IncludeInternalDebugMenu
    type: bool
    value: true

- name: Safari - Make search banners default to Contains instead of Starts With
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: FindOnPageMatchesWordStartsOnly
    type: bool
    value: false

- name: Safari - Remove useless icons from bookmarks bar
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: ProxiesInBookmarksBar
    type: string # Empty string or empty array? Original uses string.
    value: "()"

- name: Safari - Enable Develop menu and Web Inspector
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - IncludeDevelopMenu
    - WebKitDeveloperExtrasEnabledPreferenceKey
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled

- name: Enable Web Inspector context menu item in web views (Global)
  ansible.builtin.osx_defaults:
    domain: NSGlobalDomain
    key: WebKitDeveloperExtras
    type: bool
    value: true

- name: Safari - Enable continuous spellchecking
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: WebContinuousSpellCheckingEnabled
    type: bool
    value: true

- name: Safari - Disable auto-correct
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: WebAutomaticSpellingCorrectionEnabled
    type: bool
    value: false

- name: Safari - Disable AutoFill
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: false
  loop:
    - AutoFillFromAddressBook
    - AutoFillPasswords
    - AutoFillCreditCardData
    - AutoFillMiscellaneousForms

- name: Safari - Warn about fraudulent websites
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: WarnAboutFraudulentWebsites
    type: bool
    value: true

- name: Safari - Disable plug-ins
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: false
  loop:
    - WebKitPluginsEnabled
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled

- name: Safari - Disable Java
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: false
  loop:
    - WebKitJavaEnabled
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles

- name: Safari - Block pop-up windows
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: "{{ item }}"
    type: bool
    value: false
  loop:
    - WebKitJavaScriptCanOpenWindowsAutomatically
    - com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically

# Disable auto-playing video commented out in original
# - name: Safari - Disable auto-playing video
#   ansible.builtin.osx_defaults:
#     domain: "{{ item.domain }}"
#     key: "{{ item.key }}"
#     type: bool
#     value: false
#   loop:
#     - { domain: com.apple.Safari, key: WebKitMediaPlaybackAllowsInline }
#     - { domain: com.apple.Safari, key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback }
#     # Include SafariTechnologyPreview if needed
#     # - { domain: com.apple.SafariTechnologyPreview, key: WebKitMediaPlaybackAllowsInline }
#     # - { domain: com.apple.SafariTechnologyPreview, key: com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback }

- name: Safari - Enable "Do Not Track" HTTP header
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: SendDoNotTrackHTTPHeader
    type: bool
    value: true

- name: Safari - Update extensions automatically
  ansible.builtin.osx_defaults:
    domain: com.apple.Safari
    key: InstallExtensionUpdatesAutomatically
    type: bool
    value: true

# ---------------------------------------------------------------------------- #
# Mail                                                                         #
# ---------------------------------------------------------------------------- #

- name: Mail - Disable send and reply animations
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - DisableReplyAnimations
    - DisableSendAnimations

- name: Mail - Copy email addresses as foo@example.com
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: AddressesIncludeNameOnPasteboard
    type: bool
    value: false

- name: Mail - Add keyboard shortcut ⌘ + Enter to send
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: NSUserKeyEquivalents
    type: dict
    value: { "Send": "@\U21a9" } # @ represents Command key

- name: Mail - Display emails in threaded mode, sorted by date (oldest at top)
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: DraftsViewerAttributes # Note: Original script used DraftsViewerAttributes, is this correct or should it be MessageViewerAttributes?
    type: dict
    value:
      DisplayInThreadedMode: "yes"
      SortedDescending: "yes" # Yes means ascending (oldest top)
      SortOrder: "received-date"

- name: Mail - Disable inline attachments (show icons)
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: DisableInlineAttachmentViewing
    type: bool
    value: true

- name: Mail - Disable automatic spell checking
  ansible.builtin.osx_defaults:
    domain: com.apple.mail
    key: SpellCheckingBehavior
    type: string
    value: "NoSpellCheckingEnabled"

# ---------------------------------------------------------------------------- #
# Spotlight                                                                    #
# ---------------------------------------------------------------------------- #

# Hiding tray icon via chmod is fragile. Skipping.
# - name: Spotlight - Hide Spotlight tray-icon (fragile)
#   become: true
#   ansible.builtin.file:
#     path: /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search
#     mode: '0600'
#   notify: Restart SystemUIServer

- name: Spotlight - Disable indexing for any new volume
  become: true
  ansible.builtin.osx_defaults:
    domain: /.Spotlight-V100/VolumeConfiguration
    key: Exclusions
    type: array
    value: ["/Volumes"]
  notify: Restart mds # Needs mds restart?

- name: Spotlight - Change indexing order and disable results
  ansible.builtin.osx_defaults:
    domain: com.apple.spotlight
    key: orderedItems
    type: array
    value:
      - enabled: true
        name: APPLICATIONS
      - enabled: true
        name: SYSTEM_PREFS
      - enabled: true
        name: DIRECTORIES
      - enabled: true
        name: PDF
      - enabled: true
        name: FONTS
      - enabled: false
        name: DOCUMENTS
      - enabled: false
        name: MESSAGES
      - enabled: false
        name: CONTACT
      - enabled: false
        name: EVENT_TODO
      - enabled: false
        name: IMAGES
      - enabled: false
        name: BOOKMARKS
      - enabled: false
        name: MUSIC
      - enabled: false
        name: MOVIES
      - enabled: false
        name: PRESENTATIONS
      - enabled: false
        name: SPREADSHEETS
      - enabled: false
        name: SOURCE
      - enabled: false
        name: MENU_DEFINITION
      - enabled: false
        name: MENU_OTHER
      - enabled: false
        name: MENU_CONVERSION
      - enabled: false
        name: MENU_EXPRESSION
      - enabled: false
        name: MENU_WEBSEARCH
      - enabled: false
        name: MENU_SPOTLIGHT_SUGGESTIONS

- name: Spotlight - Reload settings and rebuild index
  become: true
  ansible.builtin.command: "{{ item }}"
  loop:
    - killall mds
    - mdutil -i on /
    - mdutil -E /
  changed_when: false
  failed_when: false # Ignore killall error if mds not running

# ---------------------------------------------------------------------------- #
# Terminal & iTerm 2                                                           #
# ---------------------------------------------------------------------------- #

- name: Terminal - Only use UTF-8
  ansible.builtin.osx_defaults:
    domain: com.apple.terminal
    key: StringEncodings
    type: array
    value: [4]

# Setting Terminal theme via osascript is complex and might fail.
# Recommend setting manually or via configuration profiles.
# Skipping osascript block.

# Enable Focus Follows Mouse commented out
# - name: Enable "focus follows mouse" for Terminal.app
#   ansible.builtin.osx_defaults:
#     domain: com.apple.terminal
#     key: FocusFollowsMouse
#     type: bool
#     value: true

- name: Terminal - Enable Secure Keyboard Entry
  ansible.builtin.osx_defaults:
    domain: com.apple.terminal
    key: SecureKeyboardEntry
    type: bool
    value: true

- name: Terminal - Disable line marks
  ansible.builtin.osx_defaults:
    domain: com.apple.Terminal # Note: Case sensitive? Script used .Terminal
    key: ShowLineMarks
    type: int
    value: 0

# Installing iTerm themes requires user interaction ('open'). Skipping.
# Assume user installs theme manually or via other means.
# - name: Install the Solarized Dark theme for iTerm
#   ansible.builtin.command: open "{{ role_path }}/files/Solarized Dark.itermcolors" # Assumes file exists
#   args:
#     warn: false
#   changed_when: false

- name: iTerm - Don't display the prompt when quitting
  ansible.builtin.osx_defaults:
    domain: com.googlecode.iterm2
    key: PromptOnQuit
    type: bool
    value: false

# ---------------------------------------------------------------------------- #
# Time Machine                                                                 #
# ---------------------------------------------------------------------------- #

- name: Time Machine - Prevent prompting to use new hard drives as backup volume
  ansible.builtin.osx_defaults:
    domain: com.apple.TimeMachine
    key: DoNotOfferNewDisksForBackup
    type: bool
    value: true

- name: Time Machine - Disable local backups
  become: true
  ansible.builtin.command: tmutil disablelocal
  register: tmutil_disablelocal_status
  changed_when: "'disabled' in tmutil_disablelocal_status.stdout"
  # Check if tmutil exists first
  when: ansible_distribution == 'MacOSX'
  failed_when: false # Ignore if tmutil command not found or fails

# ---------------------------------------------------------------------------- #
# Activity Monitor                                                             #
# ---------------------------------------------------------------------------- #

- name: Activity Monitor - Show the main window when launching
  ansible.builtin.osx_defaults:
    domain: com.apple.ActivityMonitor
    key: OpenMainWindow
    type: bool
    value: true

- name: Activity Monitor - Visualize CPU usage in the Dock icon
  ansible.builtin.osx_defaults:
    domain: com.apple.ActivityMonitor
    key: IconType
    type: int
    value: 5
  notify: Restart Dock # Requires Dock restart to see change

- name: Activity Monitor - Show all processes
  ansible.builtin.osx_defaults:
    domain: com.apple.ActivityMonitor
    key: ShowCategory
    type: int
    value: 0 # 0: All Processes, 100: My Processes, etc.

- name: Activity Monitor - Sort results by CPU usage
  ansible.builtin.osx_defaults:
    domain: com.apple.ActivityMonitor
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
  loop:
    - { key: SortColumn, type: string, value: "CPUUsage" }
    - { key: SortDirection, type: int, value: 0 } # 0=Descending, 1=Ascending

# ---------------------------------------------------------------------------- #
# Address Book, Calendar, TextEdit, Disk Utility, QuickTime Player             #
# ---------------------------------------------------------------------------- #

- name: Enable the debug menu in Address Book (Contacts)
  ansible.builtin.osx_defaults:
    domain: com.apple.addressbook
    key: ABShowDebugMenu
    type: bool
    value: true

- name: Enable Dashboard dev mode (widgets on desktop)
  ansible.builtin.osx_defaults:
    domain: com.apple.dashboard
    key: devmode
    type: bool
    value: true
  notify: Restart Dock # Needs Dock restart?

- name: Enable the debug menu in iCal (Calendar)
  ansible.builtin.osx_defaults:
    domain: com.apple.iCal
    key: IncludeDebugMenu
    type: bool
    value: true

- name: TextEdit - Use plain text mode for new documents
  ansible.builtin.osx_defaults:
    domain: com.apple.TextEdit
    key: RichText
    type: int
    value: 0

- name: TextEdit - Open and save files as UTF-8
  ansible.builtin.osx_defaults:
    domain: com.apple.TextEdit
    key: "{{ item.key }}"
    type: int
    value: 4 # 4 is UTF-8
  loop:
    - PlainTextEncoding
    - PlainTextEncodingForWrite

- name: Enable the debug menu in Disk Utility
  ansible.builtin.osx_defaults:
    domain: com.apple.DiskUtility
    key: "{{ item }}"
    type: bool
    value: true
  loop:
    - DUDebugMenuEnabled
    - advanced-image-options

- name: Auto-play videos when opened with QuickTime Player
  ansible.builtin.osx_defaults:
    domain: com.apple.QuickTimePlayerX
    key: MGPlayMovieOnOpen
    type: bool
    value: true

# ---------------------------------------------------------------------------- #
# Mac App Store                                                                #
# ---------------------------------------------------------------------------- #

- name: App Store - Enable WebKit Developer Tools
  ansible.builtin.osx_defaults:
    domain: com.apple.appstore
    key: WebKitDeveloperExtras
    type: bool
    value: true

- name: App Store - Enable Debug Menu
  ansible.builtin.osx_defaults:
    domain: com.apple.appstore
    key: ShowDebugMenu
    type: bool
    value: true

- name: App Store - Enable automatic update check
  ansible.builtin.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: AutomaticCheckEnabled
    type: bool
    value: true

- name: App Store - Check for software updates daily
  ansible.builtin.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: ScheduleFrequency
    type: int
    value: 1

- name: App Store - Download newly available updates in background
  ansible.builtin.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: AutomaticDownload
    type: int # Boolean in some macOS versions, Int in others. Int seems safer.
    value: 1

- name: App Store - Install System data files & security updates
  ansible.builtin.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: CriticalUpdateInstall
    type: int # Boolean in some macOS versions, Int in others.
    value: 1

- name: App Store - Automatically download apps purchased on other Macs
  ansible.builtin.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: ConfigDataInstall
    type: int # Boolean in some macOS versions, Int in others.
    value: 1

- name: App Store - Turn on app auto-update
  ansible.builtin.osx_defaults:
    domain: com.apple.commerce
    key: AutoUpdate
    type: bool
    value: true

- name: App Store - Allow the App Store to reboot machine on macOS updates
  ansible.builtin.osx_defaults:
    domain: com.apple.commerce
    key: AutoUpdateRestartRequired
    type: bool
    value: true

# ---------------------------------------------------------------------------- #
# Photos                                                                       #
# ---------------------------------------------------------------------------- #

- name: Photos - Prevent opening automatically when devices are plugged in
  ansible.builtin.osx_defaults:
    domain: com.apple.ImageCapture
    key: disableHotPlug
    type: bool
    value: true
    host: currentHost

# ---------------------------------------------------------------------------- #
# Messages                                                                     #
# ---------------------------------------------------------------------------- #

- name: Messages - Disable automatic emoji substitution
  ansible.builtin.osx_defaults:
    domain: com.apple.messageshelper.MessageController
    key: SOInputLineSettings
    type: dict-add
    value: { automaticEmojiSubstitutionEnablediMessage: false }

- name: Messages - Disable smart quotes
  ansible.builtin.osx_defaults:
    domain: com.apple.messageshelper.MessageController
    key: SOInputLineSettings
    type: dict-add
    value: { automaticQuoteSubstitutionEnabled: false }

- name: Messages - Disable continuous spell checking
  ansible.builtin.osx_defaults:
    domain: com.apple.messageshelper.MessageController
    key: SOInputLineSettings
    type: dict-add
    value: { continuousSpellCheckingEnabled: false }

# ---------------------------------------------------------------------------- #
# Google Chrome & Canary                                                       #
# ---------------------------------------------------------------------------- #

- name: Chrome - Disable backswipe on trackpads
  ansible.builtin.osx_defaults:
    domain: "{{ item }}"
    key: AppleEnableSwipeNavigateWithScrolls
    type: bool
    value: false
  loop:
    - com.google.Chrome
    - com.google.Chrome.canary
  ignore_errors: true # Ignore if Chrome/Canary not installed

- name: Chrome - Disable backswipe on Magic Mouse
  ansible.builtin.osx_defaults:
    domain: "{{ item }}"
    key: AppleEnableMouseSwipeNavigateWithScrolls
    type: bool
    value: false
  loop:
    - com.google.Chrome
    - com.google.Chrome.canary
  ignore_errors: true

- name: Chrome - Use system-native print preview dialog
  ansible.builtin.osx_defaults:
    domain: "{{ item }}"
    key: DisablePrintPreview
    type: bool
    value: true
  loop:
    - com.google.Chrome
    - com.google.Chrome.canary
  ignore_errors: true

- name: Chrome - Expand the print dialog by default
  ansible.builtin.osx_defaults:
    domain: "{{ item }}"
    key: PMPrintingExpandedStateForPrint2
    type: bool
    value: true
  loop:
    - com.google.Chrome
    - com.google.Chrome.canary
  ignore_errors: true

# ---------------------------------------------------------------------------- #
# GPGMail 2 (Assumes installed)                                                #
# ---------------------------------------------------------------------------- #

- name: GPGMail - Disable signing emails by default
  ansible.builtin.osx_defaults:
    domain: org.gpgtools.gpgmail
    # Note: Original path used ~/Library/Preferences/. Check if this is correct.
    # Using domain directly for osx_defaults module.
    key: SignNewEmailsByDefault
    type: bool
    value: false
  ignore_errors: true # Ignore if GPGMail not installed

# ---------------------------------------------------------------------------- #
# Opera & Opera Developer (Assumes installed)                                  #
# ---------------------------------------------------------------------------- #

- name: Opera - Expand the print dialog by default
  ansible.builtin.osx_defaults:
    domain: "{{ item }}"
    key: PMPrintingExpandedStateForPrint2
    type: bool
    value: true
  loop:
    - com.operasoftware.Opera
    - com.operasoftware.OperaDeveloper
  ignore_errors: true # Ignore if Opera/Dev not installed

# ---------------------------------------------------------------------------- #
# SizeUp.app (Assumes installed)                                               #
# ---------------------------------------------------------------------------- #

- name: SizeUp - Start at login
  ansible.builtin.osx_defaults:
    domain: com.irradiatedsoftware.SizeUp
    key: StartAtLogin
    type: bool
    value: true
  ignore_errors: true

- name: SizeUp - Don't show preferences window on next start
  ansible.builtin.osx_defaults:
    domain: com.irradiatedsoftware.SizeUp
    key: ShowPrefsOnNextStart
    type: bool
    value: false
  ignore_errors: true

# ---------------------------------------------------------------------------- #
# Sublime Text (Assumes installed)                                             #
# ---------------------------------------------------------------------------- #

- name: Sublime Text - Install preferences
  ansible.builtin.copy:
    src: "{{ role_path }}/files/Preferences.sublime-settings" # Assumes file exists in roles/macos/files
    dest: "{{ ansible_user_dir }}/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings"
    # Note: The original script globbed Sublime Text*, this targets the standard path.
    # Adjust if using Sublime Text 2 or other versions.
    force: true
  ignore_errors: true # Ignore if Sublime not installed or path differs

# ---------------------------------------------------------------------------- #
# Spectacle.app (Assumes installed)                                            #
# ---------------------------------------------------------------------------- #

- name: Spectacle - Install keyboard shortcuts
  ansible.builtin.copy:
    src: "{{ role_path }}/files/spectacle.json" # Assumes file exists as ShortCuts.json in roles/macos/files
    dest: "{{ ansible_user_dir }}/Library/Application Support/Spectacle/Shortcuts.json"
    force: true
  ignore_errors: true # Ignore if Spectacle not installed

# ---------------------------------------------------------------------------- #
# Transmission.app (Assumes installed)                                         #
# ---------------------------------------------------------------------------- #

- name: Transmission - Use separate folder for incomplete downloads
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: UseIncompleteDownloadFolder
    type: bool
    value: true
  ignore_errors: true

- name: Transmission - Set incomplete download folder
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: IncompleteDownloadFolder
    type: string
    value: "{{ macos_transmission_incomplete_dir }}"
  ignore_errors: true

- name: Transmission - Set completed download folder
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: DownloadLocationConstant # Key name might differ based on version? Original used this.
    type: bool # Should this be string and DownloadLocation? Using bool based on script.
    value: true # Assuming this bool enables using the default ~/Downloads. Check Transmission prefs.
  ignore_errors: true
  # Consider adding explicit DownloadFolder setting if needed:
  # ansible.builtin.osx_defaults:
  #   domain: org.m0k.transmission
  #   key: DownloadFolder
  #   type: string
  #   value: "{{ macos_transmission_complete_dir }}"
  # ignore_errors: true

- name: Transmission - Don't prompt for confirmation before downloading
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: "{{ item }}"
    type: bool
    value: false
  loop:
    - DownloadAsk
    - MagnetOpenAsk
  ignore_errors: true

- name: Transmission - Don't prompt for confirmation removing non-downloading active
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: CheckRemoveDownloading
    type: bool
    value: true # Note: Original script set this to true.
  ignore_errors: true

- name: Transmission - Trash original torrent files
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: DeleteOriginalTorrent
    type: bool
    value: true
  ignore_errors: true

- name: Transmission - Hide donate message
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: WarningDonate
    type: bool
    value: false
  ignore_errors: true

- name: Transmission - Hide legal disclaimer
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: WarningLegal
    type: bool
    value: false
  ignore_errors: true

- name: Transmission - Enable IP block list
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: BlocklistNew
    type: bool
    value: true
  ignore_errors: true

- name: Transmission - Set IP block list URL
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: BlocklistURL
    type: string
    value: "{{ macos_transmission_blocklist_url }}"
  ignore_errors: true

- name: Transmission - Enable block list auto-update
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: BlocklistAutoUpdate
    type: bool
    value: true
  ignore_errors: true

- name: Transmission - Randomize port on launch
  ansible.builtin.osx_defaults:
    domain: org.m0k.transmission
    key: RandomPort
    type: bool
    value: true
  ignore_errors: true

# ---------------------------------------------------------------------------- #
# Twitter.app (Assumes installed)                                              #
# ---------------------------------------------------------------------------- #

- name: Twitter - Disable smart quotes
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: AutomaticQuoteSubstitutionEnabled
    type: bool
    value: false
  ignore_errors: true

- name: Twitter - Show app window when clicking menu bar icon
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: MenuItemBehavior
    type: int
    value: 1
  ignore_errors: true

- name: Twitter - Enable hidden 'Develop' menu
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: ShowDevelopMenu
    type: bool
    value: true
  ignore_errors: true

- name: Twitter - Open links in the background
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: openLinksInBackground
    type: bool
    value: true
  ignore_errors: true

- name: Twitter - Allow closing compose window with Esc
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: ESCClosesComposeWindow
    type: bool
    value: true
  ignore_errors: true

- name: Twitter - Show full names
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: ShowFullNames
    type: bool
    value: true
  ignore_errors: true

- name: Twitter - Hide app in background if not front-most
  ansible.builtin.osx_defaults:
    domain: com.twitter.twitter-mac
    key: HideInBackground
    type: bool
    value: true
  ignore_errors: true

# ---------------------------------------------------------------------------- #
# Tweetbot.app (Assumes installed)                                             #
# ---------------------------------------------------------------------------- #

- name: Tweetbot - Bypass t.co URL shortener
  ansible.builtin.osx_defaults:
    domain: com.tapbots.TweetbotMac
    key: OpenURLsDirectly
    type: bool
    value: true
  ignore_errors: true

# ---------------------------------------------------------------------------- #
# Final Steps                                                                  #
# ---------------------------------------------------------------------------- #

# Handlers will restart affected applications based on 'notify' directives.
# No need for the final 'killall' loop from the script.

- name: Display completion message
  ansible.builtin.debug:
    msg: "macOS defaults applied. Some changes may require a logout/restart or application restart to take full effect." 